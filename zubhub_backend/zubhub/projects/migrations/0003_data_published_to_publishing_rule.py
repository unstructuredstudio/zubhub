# Generated by Django 3.2 on 2022-03-03 09:17

from django.db import migrations


def apply(apps, schema_editor):
    """
    Copy all project/comment published fields to project/comment publish.

    * Loop through all projects/comments instance, and copy the published field.
    * Create a new PublishingRule model instance and map the copied 
    field value into this instance.
    * set project/comment publish field to point to this PublishingRule instance.
    """
    Project = apps.get_model("projects", "Project")
    Comment = apps.get_model("projects", "Comment")
    PublishingRule = apps.get_model("projects", "PublishingRule")

    for project in Project.objects.all():

        if not getattr(project, "publish", None):

            # create publishing rule
            if project.published == True:
                rule = PublishingRule.objects.create(
                    type=4, 
                    publisher_id=str(project.creator.id))
            else:
                rule = PublishingRule.objects.create(
                    type=1, 
                    publisher_id=str(project.creator.id))

            # set publishing rule
            project.publish = rule
            project.save()


    for comment in Comment.objects.all():

        if not getattr(comment, "publish", None):

            # create publishing rule
            if comment.published == True:
                rule = PublishingRule.objects.create(
                    type=4, 
                    publisher_id=str(comment.creator.id))
            else:
                rule = PublishingRule.objects.create(
                    type=1, 
                    publisher_id=str(comment.creator.id))

            # set publishing rule
            comment.publish = rule
            comment.save()



def revert(apps, schema_editor):
    """
    Delete all project/comment publish one-to-one relationship.

    * Loop through all projects and comments publish field.
    * If it points to a PublishingRule instance, delete 
    that instance and reset project/comment publish field.
    """
    Project = apps.get_model("projects", "Project")
    Comment = apps.get_model("projects", "Comment")
    PublishingRule = apps.get_model("projects", "PublishingRule")

    for project in Project.objects.all():
        if getattr(project, "publish", None):
            rule_id = project.publish.id
            project.publish = None
            project.save()
            PublishingRule.objects.filter(id=rule_id).delete()

    for comment in Comment.objects.all():
        if getattr(comment, "publish", None):
            rule_id = comment.publish.id
            comment.publish = None
            comment.save()
            PublishingRule.objects.filter(id=rule_id).delete()




class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0002_auto_20220303_0855'),
    ]

    operations = [
        migrations.RunPython(apply, revert),
    ]
