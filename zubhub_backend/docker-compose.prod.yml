version: "3.9"

services:
  web:
    image: unstructuredstudio/zubhub-services_web:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        max_replicas_per_node: 1
    environment:
      - SECRET_NAME=zubhub_services_secrets
    secrets:
      - zubhub_services_secrets
    ports:
      - 8000
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    env_file: .env
    deploy:
      replicas: 1
      # update_config:
      #   parallelism: 2
      #   delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
    ports:
      - 5672
      - 15672

  reverse-proxy:
    image: valian/docker-nginx-auto-ssl:1.0.0
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./.ssl-data:/etc/resty-auto-ssl
    environment:
      ALLOWED_DOMAINS: "(api|www.api|rabbitmq|prometheus).zubhub.unstructured.studio"
      SITES:
        "api.zubhub.unstructured.studio=web:8000;www.api.zubhub.unstructured.studio=web:8000;\
        rabbitmq.zubhub.unstructured.studio=rabbitmq:15672;prometheus.zubhub.unstructured.studio=prometheus:9090"
      FORCE_HTTPS: "true"
    depends_on:
      - web
      - rabbitmq
      - prometheus

  celery_worker:
    image: unstructuredstudio/zubhub-services_celery:latest
    environment:
      - SECRET_NAME=zubhub_services_secrets
    secrets:
      - zubhub_services_secrets
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
    depends_on:
      - rabbitmq

  prometheus:
    image: prom/prometheus
    ports:
      - 9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
    volumes:
      - ./compose/prometheus.yml:/etc/prometheus/prometheus.yml:ro

secrets:
  zubhub_services_secrets:
    file: .env

volumes:
  .ssl-data:
